{
  "name": "betta-bootstrap-editor",
  "version": "0.0.0",
  "description": "Simple Bootstrap variable editor",
  "main": "static/js/app.js",
  "scripts": {
    "lint": "jshint 'static/js/' && jscs 'static/js/'",
    "test": "npm run lint"
  },
  "keywords": [
    "css",
    "less",
    "betta",
    "bootstrap",
    "editor"
  ],
  "homepage": "http://jakesidsmith.github.io/betta-bootstrap-editor/",
  "repository": {
    "type": "git",
    "url": "https://github.com/JakeSidSmith/betta-bootstrap-editor"
  },
  "bugs": {
    "url": "https://github.com/JakeSidSmith/betta-bootstrap-editor/issues"
  },
  "author": "Jake 'Sid' Smith",
  "contributors": [
    {
      "name": "Jake 'Sid' Smith"
    }
  ],
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "jshint": "2.8.0",
    "jscs": "1.13.1"
  },
  "jshintConfig": {
    "browserify": true,
    "unused": true,
    "undef": true,
    "globals": {
      "console": false
    }
  },
  "jscsConfig": {
    "disallowMultipleVarDecl": "exceptUndefined",
    "validateQuoteMarks": {
      "mark": "'",
      "escape": false
    },
    "validateParameterSeparator": ", ",
    "validateIndentation": 2,
    "requireSpacesInFunction": {
      "beforeOpeningRoundBrace": true,
      "beforeOpeningCurlyBrace": true
    },
    "requireSpacesInConditionalExpression": {
      "afterTest": true,
      "beforeConsequent": true,
      "afterConsequent": true,
      "beforeAlternate": true
    },
    "disallowTrailingWhitespace": true,
    "maximumLineLength": 100,
    "requireCurlyBraces": [
      "if",
      "else",
      "for",
      "while",
      "do",
      "try",
      "catch"
    ],
    "disallowMixedSpacesAndTabs": true,
    "requireSpaceBeforeBinaryOperators": true,
    "safeContextKeyword": [
      "self"
    ],
    "disallowMultipleLineBreaks": true,
    "disallowMultipleLineStrings": true,
    "disallowSpaceAfterObjectKeys": true,
    "disallowNewlineBeforeBlockStatements": true,
    "disallowTrailingComma": true,
    "requireCommaBeforeLineBreak": true,
    "requireSpaceBetweenArguments": true,
    "requireSpaceBeforeBlockStatements": true,
    "requireSpaceBeforeObjectValues": true,
    "requireSpacesInForStatement": true
  }
}
